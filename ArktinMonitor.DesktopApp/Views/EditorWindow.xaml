<Window x:Class="ArktinMonitor.DesktopApp.Views.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        mc:Ignorable="d"
        xmlns:helpers="clr-namespace:ArktinMonitor.DesktopApp.Helpers"

        Title="ArktinMonitor Manager" Height="400" Width="800" MinHeight="200" MinWidth="500"

        ResizeMode="CanResizeWithGrip"
        Icon="/ArktinMonitor.DesktopApp;component/Images/ArktinMonitor.ico"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModel="clr-namespace:ArktinMonitor.DesktopApp.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <viewModel:EditorViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <helpers:NullToBooleanConverter x:Key="NullToBooleanConverter" />
            <helpers:IntToBoolConverter x:Key="IntToBoolConverter" />
            <helpers:BoolToStrikethrough x:Key="BoolToStrikethrough" />
            <helpers:DebugDummyConverter x:Key="DebugDummyConverter" />
            <helpers:DataGridNewItemPlaceholderToIconConverter x:Key="DataGridNewItemPlaceholderToIconConverter" />
            <helpers:DataGridNewItemPlaceholderToVisibility x:Key="DataGridNewItemPlaceholderToVisibility" />
            <helpers:DataGridNewItemPlaceholderToBool x:Key="DataGridNewItemPlaceholderToBool" />
            <helpers:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="80" MaxWidth="300"/>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--<DataGrid IsReadOnly="True" ItemsSource="{Binding Email}"/>-->
        <!--<DataGrid ItemsSource="{Binding Users, Mode=TwoWay}" SelectedItem="{Binding User ,Mode=TwoWay}"></DataGrid>-->
        <StackPanel Grid.Column="0" Grid.Row="0">
            <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="15,0,0,0">Users</TextBlock>
            <ListBox ItemsSource="{Binding Users, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     SelectedItem="{Binding User, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding Enabled}" Margin="0,-1,6,0" ToolTip="Enabled" />
                            <TextBlock Text="{Binding VisibleName}"
                                       TextDecorations="{Binding Removed, Converter={StaticResource BoolToStrikethrough}}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch"></GridSplitter>
        <StackPanel  Grid.Column="2" Grid.Row="0">
            <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="15,0,0,0">Blocked apps</TextBlock>
            <DataGrid
                  ItemsSource="{Binding User.BlockedApplications, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding Application, Mode=TwoWay, NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True}"
                  AutoGenerateColumns="False"
                  SelectionMode="Single"
                  IsHitTestVisible="True"
                  CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn MinWidth="40" Header="Active"
                                        Binding="{Binding Active, UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource {x:Type CheckBox}}" />
                    <DataGridTemplateColumn MinWidth="40" Header="Name">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Name}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn MinWidth="40" Header="Name"
                                    Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource {x:Type TextBox}}" />-->
                    <DataGridTemplateColumn MinWidth="40" Header="Path">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button
                                    Width="24" Height="24" Padding="0" Margin="0,0,10,0" ToolTip="Edit path" 
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{Binding DataContext.EditBlockedAppCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                        <materialDesign:PackIcon Kind="Pencil" Width="20" Height="20" Margin="0,0,0,0"/>
                                    </Button>
                                    <TextBox Text="{Binding FilePath}" IsReadOnly="True"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Header="Path"
                                    MinWidth="40" Width="*" IsReadOnly="True"
                                    Binding="{Binding Path, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource {x:Type TextBox}}"/>-->

                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>

        <Button Grid.Column="2" Grid.Row="0" Width="60" Height="60"
                HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="16,16,16,16"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Command="{Binding AddNewBlockedAppCommand}">
            <materialDesign:PackIcon Kind="Plus" Width="40" Height="40" />
        </Button>

        <StackPanel Visibility="Collapsed" Orientation="Horizontal" Grid.Column="2" Grid.Row="1">
            <Button Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding AddNewBlockedAppCommand}"
                    Content="Add" />
            <Button ToolTip="sdslgls" Content="Remove" />
            <Button Content="Save" />
            <Button Content="Cancel" />
        </StackPanel>
    </Grid>
</Window>



