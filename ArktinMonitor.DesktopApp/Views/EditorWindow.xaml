<Window x:Class="ArktinMonitor.DesktopApp.Views.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="ArktinMonitor Manager" Height="400" Width="687.671"
        
        ResizeMode="CanMinimize"
        Icon="/ArktinMonitor.DesktopApp;component/Images/ArktinMonitor.ico"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModel="clr-namespace:ArktinMonitor.DesktopApp.ViewModel"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <viewModel:EditorViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="10px"></Setter>
            <Setter Property="Width" Value="100px"></Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <!--<DataGrid IsReadOnly="True" ItemsSource="{Binding Email}"/>-->

        <ListBox Grid.Column="0" Grid.Row="0"  ItemsSource="{Binding Users, Mode=TwoWay}" SelectedItem="{Binding User}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Enabled}" Margin="0,0,2,0"></CheckBox>
                        <TextBlock Text="{Binding VisibleName}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <!--<Button Command="{Binding SignUpCommand}">Click me</Button>-->
        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding User.VisibleName}" VerticalAlignment="Bottom"></TextBlock>
        <!--<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding User.Enabled}" VerticalAlignment="Bottom"></TextBlock>-->
        <DataGrid Grid.Column="1" Grid.Row="0" 
                  ItemsSource="{Binding User.BlockedApplications, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding BlockedApplication, Mode=TwoWay, NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True}" 
                  AutoGenerateColumns="False"
            >
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="Active" Binding="{Binding Active, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource {x:Type CheckBox}}"></DataGridCheckBoxColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource {x:Type TextBox}}"></DataGridTextColumn>
                <DataGridTextColumn IsReadOnly="True" Header="Path" Binding="{Binding Path, UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource {x:Type TextBox}}"></DataGridTextColumn>
                <DataGridTemplateColumn Header="Edit">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button  Command="{Binding DataContext.TestCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Content="Edit path"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
            <Button Command="{Binding Test2Command}" Content="Add"></Button>
            <Button Content="Remove"></Button>
            <Button Content="Save"></Button>
            <Button Content="Cancel"></Button>
        </StackPanel>

    </Grid>
</Window>
