<Window x:Class="ArktinMonitor.DesktopApp.Views.EditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:helpers="clr-namespace:ArktinMonitor.DesktopApp.Helpers"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModel="clr-namespace:ArktinMonitor.DesktopApp.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        Title="ArktinMonitor Manager" Height="400" Width="800" MinHeight="200" MinWidth="500"

        ResizeMode="CanResizeWithGrip"
        Icon="/ArktinMonitor.DesktopApp;component/Images/ArktinMonitor.ico"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <viewModel:EditorViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <helpers:BoolToStrikethrough x:Key="BoolToStrikethrough" />
            <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <helpers:DebugDummyConverter x:Key="DebugDummyConverter" />
            <helpers:BoolToDayTimeIcon x:Key="BoolToDayTimeIcon" />
            <materialDesignConverters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="80" MaxWidth="300" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--Labels-->
        <TextBlock Text="Users"  
                   Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Margin="15,0,0,0" 
                   Style="{StaticResource MaterialDesignTitleTextBlock}" />
        <TextBlock Text="Blocked apps" 
                   Grid.Column="2" Grid.Row="0" Style="{StaticResource MaterialDesignTitleTextBlock}" 
                   VerticalAlignment="Center" Margin="15,0,0,0" />

        <!--Buttons-->
        <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">

            <!--All the changes are saved instantly-->
            <Button Style="{StaticResource MaterialDesignFlatButton}" Height="24"
                    HorizontalAlignment="Right" Command="{Binding RefreshCommand}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="All the changes are saved instantly " FontWeight="Light" Foreground="{StaticResource PrimaryHueLightBrush}"/>
                    <materialDesign:PackIcon Kind="Refresh" Foreground="{StaticResource PrimaryHueLightBrush}"/>
                </StackPanel>
            </Button>

            <!--Change theme-->
            <ToggleButton x:Name="ThemeToggle" Margin="4" IsChecked="True"
                          Click="ButtonBase_OnClick" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                          HorizontalAlignment="Right"
                          ToolTip="Enable or disable dark theme">
                <materialDesign:PackIcon Kind="{Binding ElementName=ThemeToggle, Path=IsChecked, Converter={StaticResource BoolToDayTimeIcon}}"/>
            </ToggleButton>

        </StackPanel>

        <!--Users list-->
        <Grid Grid.Column="0" Grid.Row="1">
            <ListBox ItemsSource="{Binding Users, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     SelectedItem="{Binding User, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding Enabled}" Margin="0,-1,6,0" ToolTip="Enabled" />
                            <TextBlock Text="{Binding VisibleName}"
                                       TextDecorations="{Binding Removed, Converter={StaticResource BoolToStrikethrough}}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" />

        <!--Blocked apps list-->
        <Grid Grid.Column="2" Grid.Row="1">
            <DataGrid ItemsSource="{Binding User.BlockedApplications, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding Application, Mode=TwoWay, NotifyOnTargetUpdated=True,NotifyOnSourceUpdated=True}"
                AutoGenerateColumns="False" SelectionMode="Single" IsHitTestVisible="True" CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Active" MinWidth="40" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Blocks or unblocks the app" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Actions" MinWidth="40" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button 
                                        Width="24" Height="24" Padding="0" Margin="0,0,4,0" ToolTip="Edit app"
                                        Style="{StaticResource MaterialDesignFlatButton}"
                                        Command="{Binding DataContext.EditBlockedAppCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                        <materialDesign:PackIcon Kind="Pencil" Width="20" Height="20" Margin="0,0,0,0" />
                                    </Button>
                                    <Button
                                        Width="24" Height="24" Padding="0" ToolTip="Remove app"
                                        Style="{StaticResource MaterialDesignFlatButton}"
                                        Command="{Binding DataContext.RemoveBlockedAppCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                        <materialDesign:PackIcon Kind="Delete" Width="20" Height="20" Margin="0,0,0,0" />
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Name" MinWidth="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Path" MinWidth="40">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding FilePath}" IsReadOnly="True" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        
        <!--Add new app button-->
        <Button Command="{Binding AddNewBlockedAppCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="24" ToolTip="Block new app"
                Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                Grid.Column="2" Grid.Row="1" Width="50" Height="50">
            <materialDesign:PackIcon Kind="Plus" Width="32" Height="32" SnapsToDevicePixels="True"/>
        </Button>
    </Grid>
</Window>